<?php

/**
 * This file is part of the Cubiche package.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace Cubiche\Core\Bus\Tests\Units\Middlewares\Locking;

use Cubiche\Core\Bus\Middlewares\Locking\LockingMiddleware;
use Cubiche\Core\Bus\Tests\Fixtures\Event\LoginUserEvent;
use Cubiche\Core\Bus\Tests\Fixtures\Event\TriggerEventOnListener;
use Cubiche\Core\Bus\Tests\Units\TestCase;

/**
 * LockingMiddleware class.
 *
 * Generated by TestGenerator on 2016-04-07 at 15:40:41.
 */
class LockingMiddlewareTests extends TestCase
{
    /**
     * Test handle method.
     */
    public function testHandleEvent()
    {
        $this
            ->given($middleware = new LockingMiddleware())
            ->and($event = new LoginUserEvent('ivan@cubiche.com'))
            ->and($callable = function (LoginUserEvent $event) {
                $event->setEmail('tech@cubiche.org');
            })
            ->when($middleware->handle($event, $callable))
            ->then()
                ->string($event->email())
                    ->isEqualTo('tech@cubiche.org')
        ;

        $this
            ->given($middleware = new LockingMiddleware())
            ->and($event = new LoginUserEvent('ivan@cubiche.com'))
            ->and($callable = function (LoginUserEvent $event) {
                $event->setEmail('tech@cubiche.org');

                throw new \InvalidArgumentException();
            })
            ->then()
                ->exception(function () use ($middleware, $event, $callable) {
                    $middleware->handle($event, $callable);
                })
                ->isInstanceOf(\InvalidArgumentException::class)
        ;

        $this
            ->given($middleware = new LockingMiddleware())
            ->and($callable = function (LoginUserEvent $event) {
                $event->setEmail(md5($event->email()));
            })
            ->and($listener = new TriggerEventOnListener($middleware, $callable))
            ->and($event = new LoginUserEvent('ivan@cubiche.com'))
            ->when($middleware->handle($event, function ($event) use ($listener) {
                $listener->onLogin($event);
            }))
            ->then()
                ->string($event->email())
                    ->isEqualTo(md5(sha1('ivan@cubiche.com')))
        ;
    }
}
