<?php

/**
 * This file is part of the Cubiche/Metadata component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Cubiche\Core\Metadata\Tests\Units\Locator;

use Cubiche\Core\Metadata\Exception\MappingException;
use Cubiche\Core\Metadata\Locator\DefaultFileLocator;
use Cubiche\Core\Metadata\Locator\FileLocatorInterface;

/**
 * DefaultFileLocatorTests class.
 *
 * Generated by TestGenerator on 2017-05-16 at 13:17:21.
 */
class DefaultFileLocatorTests extends FileLocatorTestCase
{
    /**
     * @return FileLocatorInterface
     */
    protected function createLocator()
    {
        return new DefaultFileLocator([
            $this->mappingDirectory => 'Cubiche\Core\Metadata\Tests',
            __DIR__.'/../../Fixtures/mapping-two' => 'Cubiche\Foo\Bar\Tests',
        ]);
    }

    /**
     * Test create.
     */
    public function testCreate()
    {
        $this
            ->given($separator = '')
            ->then()
                ->exception(function () use ($separator) {
                    new DefaultFileLocator([], $separator);
                })->isInstanceOf(\InvalidArgumentException::class)
        ;

        $this
            ->given($locator = $this->createLocator())
            ->then()
                ->array($locator->prefixes())
                    ->contains('Cubiche\Core\Metadata\Tests')
                ->array($locator->paths())
                    ->contains($this->mappingDirectory)
        ;
    }

    /**
     * Test findMappingFile method.
     */
    public function testfindMappingFile()
    {
        parent::testfindMappingFile();

        $this
            ->given($locator = $this->createLocator())
            ->then()
                ->variable($locator->findMappingFile('Cubiche\Core\Metadata\Tests\Fixtures\Place', '.xml'))
                    ->isNull()
        ;
    }

    /**
     * Test getAllClassNames method.
     */
    public function testGetAllClassNames()
    {
        parent::testGetAllClassNames();

        $this
            ->given(
                $locator = new DefaultFileLocator([
                    __DIR__.'/../../Fixtures/InvalidMappingDir' => 'Cubiche\Core\Metadata\Tests',
                ])
            )
            ->then()
                ->exception(function () use ($locator) {
                    $locator->getAllClassNames('.xml');
                })->isInstanceOf(MappingException::class)
        ;
    }
}
