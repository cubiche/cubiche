<?php

/**
 * This file is part of the Cubiche/Metadata component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Cubiche\Core\Metadata\Tests\Units\Cache;

use Cubiche\Core\Metadata\Cache\CacheInterface;
use Cubiche\Core\Metadata\ClassMetadata;
use Cubiche\Core\Metadata\PropertyMetadata;
use Cubiche\Core\Metadata\Tests\Fixtures\User;
use Cubiche\Core\Metadata\Tests\Units\TestCase;

/**
 * CacheTestCase class.
 *
 * Generated by TestGenerator on 2017-05-16 at 13:17:21.
 *
 * @engine isolate
 */
abstract class CacheTestCase extends TestCase
{
    protected $cacheDirectory = __DIR__.'/Cache';

    /**
     * @return CacheInterface
     */
    abstract protected function createCache();

    /**
     * Create the cache directory.
     */
    public function setUp()
    {
        if (!is_dir($this->cacheDirectory)) {
            mkdir($this->cacheDirectory);
        }
    }

    /**
     * Remove the cache directory.
     */
    public function tearDown()
    {
        $this->rmdir($this->cacheDirectory);
    }

    /**
     * Test Load method.
     */
    public function testLoad()
    {
        $this
            ->given($cache = $this->createCache())
            ->and($className = User::class)
            ->then()
                ->variable($cache->load($className))
                    ->isNull()
        ;
    }

    /**
     * Test Save method.
     */
    public function testSave()
    {
        $this
            ->given($cache = $this->createCache())
            ->and($metadata = new ClassMetadata(User::class))
            ->and($metadata->addPropertyMetadata(new PropertyMetadata(User::class, 'name')))
            ->when($cache->save($metadata))
            ->then()
                ->object($classMetadata = $cache->load(User::class))
                    ->isInstanceOf(ClassMetadata::class)
        ;
    }
}
