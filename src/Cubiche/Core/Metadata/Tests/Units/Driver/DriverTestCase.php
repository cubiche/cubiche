<?php

/**
 * This file is part of the Cubiche/Metadata component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Cubiche\Core\Metadata\Tests\Units\Driver;

use Cubiche\Core\Metadata\ClassMetadata;
use Cubiche\Core\Metadata\Driver\DriverInterface;
use Cubiche\Core\Metadata\Exception\MappingException;
use Cubiche\Core\Metadata\Tests\Fixtures\Address;
use Cubiche\Core\Metadata\Tests\Fixtures\User;
use Cubiche\Core\Metadata\Tests\Units\TestCase;

/**
 * DriverTestCase class.
 *
 * Generated by TestGenerator on 2017-05-16 at 13:17:21.
 */
abstract class DriverTestCase extends TestCase
{
    /**
     * @return DriverInterface
     */
    abstract protected function createDriver();

    /**
     * Test loadMetadataForClass method.
     */
    public function testLoadMetadataForClass()
    {
        $this
            ->given($driver = $this->createDriver())
            ->then()
                ->exception(function () use ($driver) {
                    $driver->loadMetadataForClass('Cubiche\Core\Metadata\Tests\Fixtures\Post');
                })->isInstanceOf(MappingException::class)
                ->exception(function () use ($driver) {
                    $driver->loadMetadataForClass('Cubiche\Core\Metadata\Tests\Fixtures\Blog');
                })->isInstanceOf(MappingException::class)
        ;

        $this
            ->given($driver = $this->createDriver())
            ->when($classMetadata = $driver->loadMetadataForClass(User::class))
            ->then()
                ->object($classMetadata)
                    ->isInstanceOf(ClassMetadata::class)
                ->array($classMetadata->propertiesMetadata())
                    ->hasSize(7)
                    ->hasKey('id')
                    ->hasKey('name')
                    ->hasKey('username')
                    ->hasKey('age')
                    ->hasKey('email')
                    ->hasKey('addresses')
                    ->hasKey('friends')
                ->object($propertyMetadata = $classMetadata->propertyMetadata('id'))
                    ->isNotNull()
                ->boolean($propertyMetadata->getMetadata('identifier'))
                    ->isTrue()
                ->string($propertyMetadata->getMetadata('name'))
                    ->isEqualTo('_id')
                ->string($classMetadata->propertyMetadata('name')->getMetadata('name'))
                    ->isEqualTo('fullName')
                ->string($classMetadata->propertyMetadata('addresses')->getMetadata('type'))
                    ->isEqualTo('ArraySet')
                ->string($classMetadata->propertyMetadata('addresses')->getMetadata('of'))
                    ->isEqualTo('Cubiche\Core\Metadata\Tests\Fixtures\Address')
            ->and()
            ->when($classMetadata = $driver->loadMetadataForClass(User::class))
            ->then()
                ->object($classMetadata)
                    ->isInstanceOf(ClassMetadata::class)
        ;
    }

    /**
     * Test getAllClassNames method.
     */
    public function testGetAllClassNames()
    {
        $this
            ->given($driver = $this->createDriver())
            ->when($classNames = $driver->getAllClassNames())
            ->then()
                ->array($classNames)
                    ->contains(User::class)
                    ->contains(Address::class)
        ;
    }
}
