<?php

/**
 * This file is part of the Cubiche/Metadata component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Cubiche\Core\Metadata\Tests\Units\Factory;

use Cubiche\Core\Metadata\Factory\DriverFactory;
use Cubiche\Core\Metadata\Locator\DefaultFileLocator;
use Cubiche\Core\Metadata\Tests\Fixtures\Driver\AnnotationDriver;
use Cubiche\Core\Metadata\Tests\Fixtures\Driver\XmlDriver;
use Cubiche\Core\Metadata\Tests\Fixtures\Driver\YamlDriver;
use Cubiche\Core\Metadata\Tests\Fixtures\User;
use Cubiche\Core\Metadata\Tests\Units\TestCase;
use Doctrine\Common\Annotations\AnnotationReader;

/**
 * DriverFactoryTests class.
 *
 * Generated by TestGenerator on 2017-05-16 at 13:17:21.
 */
class DriverFactoryTests extends TestCase
{
    /**
     * @return DriverFactory
     */
    protected function createFactory()
    {
        return DriverFactory::instance();
    }

    /**
     * Test RegisterAnnotationDriver method.
     */
    public function testRegisterAnnotationDriver()
    {
        $this
            ->given($factory = $this->createFactory())
            ->then()
                ->exception(function () {
                    DriverFactory::registerAnnotationDriver(User::class);
                })->isInstanceOf(\InvalidArgumentException::class)
        ;

        $this
            ->given($factory = $this->createFactory())
            ->and(DriverFactory::registerAnnotationDriver(AnnotationDriver::class))
            ->then()
                ->array($drivers = $factory->createAnnotationDriver(new AnnotationReader()))
                ->hasSize(1)
        ;
    }

    /**
     * Test RegisterYamlDriver method.
     */
    public function testRegisterYamlDriver()
    {
        $mappingDirectory = __DIR__.'/../../Fixtures/mapping';

        $this
            ->given($factory = $this->createFactory())
            ->and(DriverFactory::registerYamlDriver(YamlDriver::class))
            ->then()
                ->array(
                    $drivers = $factory->createYamlDriver(
                        new DefaultFileLocator([
                            $mappingDirectory => 'Cubiche\Core\Metadata\Tests\Fixtures',
                        ])
                    )
                )->hasSize(1)
        ;
    }

    /**
     * Test RegisterXmlDriver method.
     */
    public function testRegisterXmlDriver()
    {
        $mappingDirectory = __DIR__.'/../../Fixtures/mapping';

        $this
            ->given($factory = $this->createFactory())
            ->and(DriverFactory::registerXmlDriver(XmlDriver::class))
            ->then()
            ->array(
                $drivers = $factory->createXmlDriver(
                    new DefaultFileLocator([
                        $mappingDirectory => 'Cubiche\Core\Metadata\Tests\Fixtures',
                    ])
                )
            )->hasSize(1)
        ;
    }
}
