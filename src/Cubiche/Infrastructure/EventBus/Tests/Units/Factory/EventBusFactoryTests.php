<?php

/**
 * This file is part of the Cubiche/EventBus component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Cubiche\Infrastructure\EventBus\Tests\Units\Factory;

use Cubiche\Core\EventBus\Event\EventBus;
use Cubiche\Core\EventDispatcher\EventDispatcher;
use Cubiche\Infrastructure\EventBus\Factory\EventBusFactory;
use Cubiche\Infrastructure\EventBus\Tests\Units\TestCase;

/**
 * EventBusFactoryTests class.
 *
 * Generated by TestGenerator on 2017-05-03 at 15:40:44.
 */
class EventBusFactoryTests extends TestCase
{
    /**
     * @return EventBus
     */
    protected function createEventBus()
    {
        return EventBusFactory::create(new EventDispatcher());
    }

    /**
     * Test Create method.
     */
    public function testCreate()
    {
        $this
            ->given($bus = $this->createEventBus())
            ->then()
                ->object($bus)
                    ->isInstanceOf(EventBus::class)
                ->and($reflectionClass = new \ReflectionClass(EventBus::class))
                ->and($reflectionProperty = $reflectionClass->getProperty('middlewares'))
                ->and($reflectionProperty->setAccessible(true))
                ->array($reflectionProperty->getValue($bus)->toArray())
                    ->hasSize(2)
        ;
    }
}
