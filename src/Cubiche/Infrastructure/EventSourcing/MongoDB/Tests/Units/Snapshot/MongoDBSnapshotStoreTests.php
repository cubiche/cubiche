<?php

/**
 * This file is part of the Cubiche/EventSourcing component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Cubiche\Infrastructure\EventSourcing\MongoDB\Tests\Units\Snapshot;

use Cubiche\Core\Serializer\Encoder\ArrayEncoder;
use Cubiche\Core\Serializer\Encoder\DateTimeEncoder;
use Cubiche\Core\Serializer\Encoder\MetadataObjectEncoder;
use Cubiche\Core\Serializer\Encoder\NativeEncoder;
use Cubiche\Core\Serializer\Encoder\ObjectEncoder;
use Cubiche\Core\Serializer\Serializer;
use Cubiche\Core\Serializer\SerializerInterface;
use Cubiche\Domain\EventSourcing\Snapshot\SnapshotStoreInterface;
use Cubiche\Domain\EventSourcing\Tests\Units\Snapshot\SnapshotStoreTestCase;
use Cubiche\Infrastructure\EventSourcing\MongoDB\Snapshot\MongoDBSnapshotStore;
use Cubiche\Infrastructure\EventSourcing\MongoDB\Tests\Units\ClassMetadataFactoryTrait;
use Cubiche\Infrastructure\EventSourcing\MongoDB\Tests\Units\MongoClientTestCaseTrait;

/**
 * MongoDBSnapshotStoreTests class.
 *
 * Generated by TestGenerator on 2017-05-09 at 08:32:03.
 *
 * @engine isolate
 */
class MongoDBSnapshotStoreTests extends SnapshotStoreTestCase
{
    use MongoClientTestCaseTrait;
    use ClassMetadataFactoryTrait;

    /**
     * @return SerializerInterface
     */
    protected function createSerializer()
    {
        $metadataFactory = $this->createFactory();

        return new Serializer(array(
            new DateTimeEncoder(),
            new MetadataObjectEncoder($metadataFactory),
            new ObjectEncoder(),
            new ArrayEncoder(),
            new NativeEncoder(),
        ));
    }

    /**
     * @return SnapshotStoreInterface
     */
    protected function createStore()
    {
        return new MongoDBSnapshotStore($this->client(), $this->getDatabaseName(), $this->createSerializer());
    }
}
