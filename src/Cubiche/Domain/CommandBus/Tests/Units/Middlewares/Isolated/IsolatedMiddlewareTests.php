<?php

/**
 * This file is part of the Cubiche/Command component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Cubiche\Domain\CommandBus\Tests\Units\Middlewares\Isolated;

use Cubiche\Domain\CommandBus\Middlewares\Isolated\IsolatedMiddleware;
use Cubiche\Domain\CommandBus\Tests\Fixtures\LoginUserCommand;
use Cubiche\Domain\CommandBus\Tests\Units\TestCase;

/**
 * IsolatedMiddleware class.
 *
 * Generated by TestGenerator on 2016-04-07 at 15:40:41.
 */
class IsolatedMiddlewareTests extends TestCase
{
    /**
     * Test Execute method.
     */
    public function testExecute()
    {
        $this
            ->given($middleware = new IsolatedMiddleware())
            ->and($command = new LoginUserCommand('ivan@cubiche.com', 'plainpassword'))
            ->and($callable = function (LoginUserCommand $command) {
                $command->setEmail('info@cubiche.org');

                return true;
            })
            ->when($result = $middleware->execute($command, $callable))
            ->then()
                ->boolean($result)
                    ->isTrue()
                ->string($command->email())
                    ->isEqualTo('info@cubiche.org')
        ;

        $this
            ->given($middleware = new IsolatedMiddleware())
            ->and($command = new LoginUserCommand('ivan@cubiche.com', 'plainpassword'))
            ->and($callable = function (LoginUserCommand $command) {
                $command->setEmail('info@cubiche.org');

                throw new \InvalidArgumentException();
            })
            ->then()
                ->exception(function () use ($middleware, $command, $callable) {
                    $middleware->execute($command, $callable);
                })
                ->isInstanceOf(\InvalidArgumentException::class)
        ;

        $this
            ->given($middleware = new IsolatedMiddleware())
            ->and($command = new LoginUserCommand('ivan@cubiche.com', 'plainpassword'))
            ->and($counter = 0)
            ->and($callable = function (LoginUserCommand $command) use (&$counter) {
                ++$counter;
            })
            ->when($middleware->execute($command, $callable))
            ->then()
                ->integer($counter)
                    ->isEqualTo(1)
            ->when($middleware->execute($command, $callable))
            ->then()
                ->integer($counter)
                    ->isEqualTo(2)
        ;
    }
}
