<?php
/**
 * This file is part of the Cubiche package.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace Cubiche\Domain\EventSourcing\Tests\Units\Migrations;

use Cubiche\Domain\EventSourcing\Migrations\Migration;
use Cubiche\Domain\EventSourcing\Tests\Fixtures\PostEventSourced;
use Cubiche\Domain\EventSourcing\Tests\Units\TestCase;
use Cubiche\Domain\EventSourcing\Versioning\Version;

/**
 * MigrationTests class.
 *
 * Generated by TestGenerator on 2016-06-28 at 14:36:54.
 */
class MigrationTests extends TestCase
{
    /**
     * Test aggregates method.
     */
    public function testAggregates()
    {
        $this
            ->given($migration = new Migration([], Version::fromString('2.4.0')))
            ->then()
                ->array($migration->aggregates())
                    ->isEmpty()
        ;

        $this
            ->given($migration = new Migration([PostEventSourced::class], Version::fromString('2.4.0')))
            ->then()
                ->array($migration->aggregates())
                    ->isEqualTo([PostEventSourced::class])
        ;
    }

    /**
     * Test version method.
     */
    public function testVersion()
    {
        $this
            ->given($migration = new Migration([], Version::fromString('2.4.0')))
            ->then()
                ->object($migration->version())
                    ->isEqualTo(Version::fromString('2.4.0'))
        ;
    }

    /**
     * Test createdAt method.
     */
    public function testCreatedAt()
    {
        $this
            ->given($migration = new Migration([], Version::fromString('2.4.0')))
            ->then()
                ->object($migration->createdAt())
                    ->isNotNull()
        ;

        $this
            ->given($createdAt = new \DateTime())
            ->given($migration = new Migration([], Version::fromString('2.4.0'), $createdAt))
            ->then()
                ->object($migration->createdAt())
                    ->isEqualTo($createdAt)
        ;
    }
}
