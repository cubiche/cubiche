<?php

/**
 * This file is part of the Cubiche/EventSourcing component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace Cubiche\Domain\EventSourcing\Tests\Units\Migrations;

use Cubiche\Domain\EventSourcing\Migrations\Migrator;
use Cubiche\Domain\EventSourcing\Tests\Fixtures\PostEventSourced;
use Cubiche\Domain\EventSourcing\Tests\Units\TestCase;
use Cubiche\Domain\EventSourcing\Versioning\Version;

/**
 * MigratorTests class.
 *
 * Generated by TestGenerator on 2016-08-10 at 10:18:25.
 */
class MigratorTests extends TestCase
{
    /**
     * @return Migrator
     */
    protected function createMigrator()
    {
        return new Migrator($this->getClassMetadataFactory(), $this->migrationsDirectory);
    }

    /**
     * Test generate method.
     */
    public function testGenerate()
    {
        require_once __DIR__.'/../../Fixtures/BlogEventSourced.php';

        $this
            ->given($migrator = $this->createMigrator())
            ->and($version = Version::fromString('6.2.0'))
            ->when($migrator->generate($version))
            ->then()
                ->boolean(file_exists($this->getMigratorFileName(PostEventSourced::class, $version)))
                    ->isTrue()
                ->boolean(file_exists($this->getMigratorFileName(\BlogEventSourced::class, $version)))
                    ->isTrue()
                ->and()
                ->exception(function () use ($migrator, $version) {
                    $migrator->generate($version);
                })->isInstanceOf(\RuntimeException::class)
        ;
    }
}
