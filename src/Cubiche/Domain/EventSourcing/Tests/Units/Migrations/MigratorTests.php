<?php

/**
 * This file is part of the Cubiche/EventSourcing component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace Cubiche\Domain\EventSourcing\Tests\Units\Migrations;

use Cubiche\Domain\EventSourcing\Migrations\Migration;
use Cubiche\Domain\EventSourcing\Migrations\Migrator;
use Cubiche\Domain\EventSourcing\Migrations\Store\InMemoryMigrationStore;
use Cubiche\Domain\EventSourcing\Tests\Fixtures\PostEventSourced;
use Cubiche\Domain\EventSourcing\Tests\Units\TestCase;
use Cubiche\Domain\EventSourcing\Versioning\Version;

/**
 * MigratorTests class.
 *
 * Generated by TestGenerator on 2016-08-10 at 10:18:25.
 */
class MigratorTests extends TestCase
{
    /**
     * @return Migrator
     */
    protected function createMigrator()
    {
        return new Migrator(
            $this->getClassMetadataFactory(),
            new InMemoryMigrationStore(),
            $this->migrationsDirectory
        );
    }

    /**
     * Test generate method.
     */
    public function testGenerate()
    {
        require_once __DIR__.'/../../Fixtures/BlogEventSourced.php';

        $this
            ->given($migrator = $this->createMigrator())
            ->and($version = Version::fromString('6.2.0'))
            ->when($migrator->generate($version))
            ->then()
                ->boolean(file_exists($this->getMigratorFileName(PostEventSourced::class, $version)))
                    ->isTrue()
                ->boolean(file_exists($this->getMigratorFileName(\BlogEventSourced::class, $version)))
                    ->isTrue()
                ->and()
                ->exception(function () use ($migrator, $version) {
                    $migrator->generate($version);
                })->isInstanceOf(\RuntimeException::class)
        ;
    }

    /**
     * Test status method.
     */
    public function testStatus()
    {
        $this->migrationsDirectory = __DIR__.'/../../Fixtures/Migrations';
        require_once __DIR__.'/../../Fixtures/BlogEventSourced.php';

        $this
            ->given($migrator = $this->createMigrator())
            ->when($status = $migrator->status())
            ->then()
                ->variable($status->latestMigration())
                    ->isNull()
                ->object($status->latestAvailableVersion())
                    ->isEqualTo(Version::fromString('1.1.0'))
                ->integer($status->numExecutedMigrations())
                    ->isEqualTo(0)
                ->integer($status->numAvailableMigrations())
                    ->isEqualTo(4)
                ->integer($status->numNewMigrations())
                    ->isEqualTo(4)
        ;

        $aggregates = [PostEventSourced::class, \BlogEventSourced::class];

        $migratorStore = new InMemoryMigrationStore();

        $migratorStore->persist(new Migration($aggregates, Version::fromString('0.1.0'), new \DateTime()));
        $migratorStore->persist(new Migration($aggregates, Version::fromString('0.2.0'), new \DateTime()));

        $migrator = new Migrator(
            $this->getClassMetadataFactory(),
            $migratorStore,
            $this->migrationsDirectory
        );

        $this
            ->given($status = $migrator->status())
            ->then()
                ->object($status->latestMigration()->version())
                    ->isEqualTo(Version::fromString('0.2.0'))
                ->object($status->latestAvailableVersion())
                    ->isEqualTo(Version::fromString('1.1.0'))
                ->integer($status->numExecutedMigrations())
                    ->isEqualTo(2)
                ->integer($status->numAvailableMigrations())
                    ->isEqualTo(4)
                ->integer($status->numNewMigrations())
                    ->isEqualTo(2)
        ;
    }
}
