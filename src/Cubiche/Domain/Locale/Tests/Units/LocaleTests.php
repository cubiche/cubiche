<?php

/**
 * This file is part of the Cubiche/Locale component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Cubiche\Domain\Locale\Tests\Units;

use Cubiche\Domain\Locale\CountryCode;
use Cubiche\Domain\Locale\LanguageCode;
use Cubiche\Domain\Locale\Locale;
use Cubiche\Domain\Model\Tests\Units\NativeValueObjectTestCase;

/**
 * LocaleTests class.
 *
 * Generated by TestGenerator on 2018-01-15 at 13:40:07.
 */
class LocaleTests extends NativeValueObjectTestCase
{
    /**
     * @return mixed
     */
    protected function randomNativeValue()
    {
        return sprintf(
            'en_%s',
            $this->faker->randomElement(array('AU', 'CA', 'GB', 'US'))
        );
    }

    /**
     * @return mixed
     */
    protected function invalidNativeValue()
    {
        return 'foo_bar';
    }

    /**
     * @return mixed
     */
    protected function uniqueNativeValue()
    {
        return 'es_ES';
    }

    /**
     * @param mixed $value
     *
     * @return Locale
     */
    protected function fromNative($value)
    {
        return Locale::fromNative($value);
    }

    /*
     * Test languageCode and countryCode methods.
     */
    public function testLanguageCodeCountryCode()
    {
        $this
            ->given(
                $locale1 = $this->fromNative('es_ES'),
                $locale2 = $this->fromNative('en_AU')
            )
            ->then()
                ->object($locale1->languageCode())
                    ->isEqualTo(LanguageCode::ES())
                ->object($locale1->countryCode())
                    ->isEqualTo(CountryCode::ES())
                ->object($locale2->languageCode())
                    ->isEqualTo(LanguageCode::EN())
                ->object($locale2->countryCode())
                    ->isEqualTo(CountryCode::AU())
        ;
    }
}
